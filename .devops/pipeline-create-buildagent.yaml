trigger: none
pr: none
schedules:
  - cron: "0 4 * * 0"
    displayName: "Build Agent Creation"
    always: true
    branches:
      include:
        - main

resources:
  repositories:
    - repository: provisioning
      type: github
      endpoint: "Github"
      name: spyder007/provisioning-projects

variables:
  - group: auth-api-credentials
  - group: ms-agent-settings

jobs:
  - job: create_build_agent
    displayName: Create Build Agent
    timeoutInMinutes: 560
    pool:
      name: Provisioning
    steps:
      - checkout: self
        path: s/automation
      - checkout: provisioning
        path: s/provisioning
        submodules: recursive
      # - powershell: |
      #     Push-Location "$(Build.SourcesDirectory)\provisioning"
      #     git submodule update --init --recursive
      #   displayName: "Update Submodules"
      - pwsh: |
          Install-Module powershell-yaml -Force

          $addPath = "C:\Program Files\OpenSSL-Win64\bin"
          $regexAddPath = [regex]::Escape($addPath)
          $arrPath = $env:Path -split ';' | Where-Object {$_ -notMatch "^$regexAddPath\\?"}
          $env:Path = ($arrPath + $addPath) -join ';'
          Write-Host "Import provisioning modules"
          Get-childItem "$(Build.SourcesDirectory)\provisioning\*.psm1" | % { Import-Module $_.FullName -Force }

          Write-Host "Copy authorized keys to files"
          if (-not (Test-Path "$(Build.SourcesDirectory)/provisioning/templates/buildagents/files/")) {
            New-Item -ItemType Directory "$(Build.SourcesDirectory)/provisioning/templates/buildagents/files/"
          }
          "$(authorized-keys)" | Set-Content "$(Build.SourcesDirectory)/provisioning/templates/buildagents/files/authorized_keys"

          Write-Host "Write all variables to file"
          $secretPath = "$(Build.SourcesDirectory)/provisioning/templates/buildagents/secrets.pkrvars.hcl"
          "cpus = 4" | Add-Content $secretPath
          "memory = 8192" | Add-Content $secretPath
          "disk_size = 128000" | Add-Content $secretPath
          "files_dirs = [`"./templates/buildagents/files/`"]" | Add-Content $secretPath
          "ms_agent_pool = `"Default`"" | Add-Content $secretPath
          "username = `"$(agent-username)`"" | Add-Content $secretPath
          "password = `"$(agent-password)`"" | Add-Content $secretPath
          "ms_agent_org_url = `"https://dev.azure.com/$(agent-org)`"" | Add-Content $secretPath
          "ms_agent_pat = `"$(agent-pat)`"" | Add-Content $secretPath

          $agent_release = (Invoke-RestMethod -Uri https://api.github.com/repos/microsoft/azure-pipelines-agent/releases) | Where-Object { ($_.tag_name -like "v4.*" -and -not $_.draft -and -not $_.prerelease) } | select-object -First 1
          $agent_version = $agent_release.tag_name.Replace("v", "")
          "ms_agent_url = `"https://vstsagentpackage.azureedge.net/agent/$($agent_version)`"" | Add-Content $secretPath
          "ms_agent_filename = `"vsts-agent-linux-x64-$($agent_version).tar.gz`"" | Add-Content $secretPath

          Write-Host "Configure Unifi Client Settings"
          Set-AuthApiEnvironmentVariables -authUrl $(auth-url) -clientId $(auth-client-id) -clientSecret "$(auth-client-secret)" -userName $(auth-username) -password "$(auth-password)"
          Set-UnifiEnvironmentVariables -provisionUrl $(unifi-wrapper-url) -provisionGroup $(unifi-provisioning-group)

          Write-Host (Get-AuthApiEnvironmentVariables | ConvertTo-Json)
          Write-Host (Get-UnifiEnvironmentVariables | ConvertTo-Json)

          Write-Host "Create Build Agent"
          Push-Location "$(Build.SourcesDirectory)\provisioning"
          .\Create-NewBuildAgent.ps1 -type ubuntu-2404 -OutputFolder "D:\\Hyper-V\\" -secretVariableFile "$secretPath"

        displayName: Create New Build Agent
        name: create_agent
