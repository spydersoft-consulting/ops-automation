parameters:
  - name: terraformDirectory
    type: string
  - name: planArguments
    type: string
    default: ''
  - name: addVaultAuthentication
    type: boolean
    default: false

jobs:
- job: renew_tokens
  displayName: Terraform
  pool:
    name: Default
  steps:
    - pwsh: |
        terraform init
      displayName: 'Initialize'
      workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.terraformDirectory }}
      env:
        AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
        AZDO_ORG_SERVICE_URL: $(AZDO_ORG_SERVICE_URL)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_ENDPOINT_URL_S3: $(AWS_ENDPOINT_URL_S3)
    - pwsh: |
        $addVaultAuthentication = [bool]"${{ parameters.addVaultAuthentication }}"
        if ($addVaultAuthentication) {
          terraform plan ${{ parameters.planArguments }} -var vault_approle_role_id=$(vault-app-role-id) -var vault_approle_secret_id=$(vault-app-role-secret-id) terraform plan ${{ parameters.planArguments }} -out tf.plan
        }
        else {
          terraform plan ${{ parameters.planArguments }} -out tf.plan
        }
        
        terraform show tf.plan -no-color > $(Build.ArtifactStagingDirectory)/terraform-plan.txt
      displayName: 'Plan'
      workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.terraformDirectory }}
      env:
        AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
        AZDO_ORG_SERVICE_URL: $(AZDO_ORG_SERVICE_URL)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_ENDPOINT_URL_S3: $(AWS_ENDPOINT_URL_S3)

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: terraform-plan
      displayName: 'Publish Terraform Plan'

    - ${{ if and(eq(variables['Build.SourceBranchName'], 'main'), ne(variables['Build.Reason'], 'PullRequest')) }}:
      - pwsh: |
          terraform apply -auto-approve tf.plan
        displayName: 'Apply'
        workingDirectory: $(System.DefaultWorkingDirectory)/${{ parameters.terraformDirectory }}
        env:
          AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PERSONAL_ACCESS_TOKEN)
          AZDO_ORG_SERVICE_URL: $(AZDO_ORG_SERVICE_URL)
          ARM_CLIENT_ID: $(ARM_CLIENT_ID)
          ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
          ARM_TENANT_ID: $(ARM_TENANT_ID)
          AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
          AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
          AWS_ENDPOINT_URL_S3: $(AWS_ENDPOINT_URL_S3)