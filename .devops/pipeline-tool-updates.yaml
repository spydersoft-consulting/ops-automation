trigger: none
pr: none
schedules:
- cron: "0 0 * * 0"
  displayName: "Renew Tokens"
  always: true
  branches:
    include: 
      - main

resources:
  repositories:
    - repository: argo
      type: github
      endpoint: "Github"
      name: spydersoft-consulting/ops-argo
    - repository: internal
      type: github
      endpoint: "Github"
      name: spydersoft-consulting/ops-internal-cluster
    - repository: nonprod
      type: github
      endpoint: "Github"
      name: spydersoft-consulting/ops-nonprod-cluster
    - repository: prod
      type: github
      endpoint: "Github"
      name: spydersoft-consulting/ops-prod-cluster

jobs:
  - job: update_libraries
    displayName: Update Cluster Tools
    pool:
      name: Default
    steps:
      - checkout: self
      - checkout: argo
        displayName: Checkout Argo
        clean: all
        persistCredentials: true
      - checkout: internal
        displayName: Checkout Internal
        clean: all
        persistCredentials: true
      - checkout: nonprod
        displayName: Checkout NonProd
        clean: all
        persistCredentials: true
      - checkout: prod
        displayName: Checkout Prod
        clean: all
        persistCredentials: true
      - pwsh: |
          Install-Module powershell-yaml -Force -SkipPublisherCheck -AllowClobber -Scope CurrentUser
          Import-Module powershell-yaml
        displayName: 'Install YAML Module'
      - pwsh: |
          $chart = Get-ChildItem -Path $(Build.SourcesDirectory)/ops-internal-cluster/external/monitor/grafana/Chart.yaml
          $chartDisplay = "external/monitor/grafana"
          echo "$(Build.SourcesDirectory)/ops-automation/scripts/Update-FromAutoUpdate.ps1 -path `"$($chart.DirectoryName)`" -name `"$chartDisplay`""
          "$(Build.SourcesDirectory)/ops-automation/scripts/Update-FromAutoUpdate.ps1 -path `"$($chart.DirectoryName)`" -name `"$chartDisplay`"" | Invoke-Expression
      - pwsh: |     
          $(Build.SourcesDirectory)/ops-automation/scripts/Update-HelmRepositoryList.ps1 -basePath $(Build.SourcesDirectory) -sourceRepos $("ops-argo", "ops-internal-cluster", "ops-nonprod-cluster", "ops-prod-cluster")

        displayName: 'Add Helm Repositories'
      - pwsh: |
          $(Build.SourcesDirectory)/ops-automation/scripts/Update-HelmCharts.ps1 -scriptRoot $(Build.SourcesDirectory)/ops-automation/scripts -basePath $(Build.SourcesDirectory) -sourceRepos $("ops-argo", "ops-internal-cluster", "ops-nonprod-cluster", "ops-prod-cluster")

        displayName: 'Execute Helm Update'

